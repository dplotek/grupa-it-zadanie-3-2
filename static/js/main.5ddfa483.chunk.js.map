{"version":3,"sources":["components/QuoteBox.js","App.js","index.js"],"names":["QuoteBox","quote","author","className","App","useState","allQuotes","setAllQuotes","quoteToDisplay","prevQuote","randomQuote","quotes","setQuotes","useEffect","getQuotes","a","fetch","process","then","response","json","data","reduce","b","concat","length","setRandomQuote","numberOfQuotes","drawnQuote","Math","floor","random","href","target","rel","onClick","prevState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6RAceA,EAXE,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,OACtB,OACI,sBAAKC,UAAU,mBAAf,UACI,+CACA,mBAAGA,UAAU,QAAb,SAAsBF,GAAgB,qBACtC,uBACA,mBAAGE,UAAU,SAAb,SAAuBD,QC+DpBE,EApEH,WACV,IAEA,EAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA4BF,mBAAS,CACnCG,eAAgB,GAChBC,UAAW,mBACXC,YAAY,KAHd,mBAAOC,EAAP,KAAeC,EAAf,KAMAC,qBAAU,WACR,IAAMC,EAAS,uCAAG,sBAAAC,EAAA,sEACVC,MAXEC,yIAYLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAIA,EAAKC,QAAO,SAACP,EAAEQ,GAAH,OAAQR,EAAES,OAAOD,KAAI,OAC9CL,MAAK,SAAAG,GAAI,OAAGd,EAAac,MAJZ,2CAAH,qDAMfP,MACA,IAEFD,qBAAU,WACgB,IAArBP,EAAUmB,QACXC,MAED,CAACpB,IAEJ,IAAMoB,EAAiB,WACrB,IAAMC,EAAiBrB,EAAUmB,OAC3BG,EAAaC,KAAKC,MAAMD,KAAKE,UAAYJ,EAAiB,IAAM,EACtEf,EAAU,CACRF,YAAaJ,EAAUsB,GACvBnB,UAAWE,EAAOD,YAClBF,eAAgBF,EAAUsB,MAkB9B,OACE,sBAAKzB,UAAU,UAAf,UACE,mCACE,iDACA,gQAAwM,kDAAxM,cACA,uBACA,4IAA4F,mBAAG6B,KAAK,kDAAkDC,OAAO,SAASC,IAAI,aAA9E,0BAE9F,sBAAK/B,UAAU,oBAAf,UACE,wBAAQgC,QAAST,EAAjB,0BACA,wBAAQS,QAxBW,WACC,KAArBxB,EAAOF,UACRG,GAAU,SAAAwB,GAAS,kCACdA,GADc,IAEjB5B,eAAgB,QAGlBI,GAAU,SAAAwB,GAAS,kCACdA,GADc,IAEjB5B,eAAgBG,EAAOF,gBAevB,gCAGF,cAAC,EAAD,CAAUP,OAAQS,EAAOH,eAAeN,OAASD,MAAOU,EAAOH,eAAeP,YC9DpFoC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.5ddfa483.chunk.js","sourcesContent":["import React from 'react';\r\nimport './quotebox.css';\r\n\r\nconst QuoteBox = ({quote, author}) => {\r\n    return (\r\n        <div className=\"quote__container\">\r\n            <h2>Twój cytat</h2>\r\n            <p className=\"quote\">{quote ? quote : \"Najpierw wylosuj\"}</p>\r\n            <hr/>\r\n            <p className=\"author\">{author}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default QuoteBox\r\n","import {useEffect,useState} from 'react';\nimport './App.css';\nimport QuoteBox from './components/QuoteBox';\n\nconst App = () => {\n  const API = process.env.REACT_APP_API_KEY;\n\n  const [allQuotes, setAllQuotes] = useState([]);\n  const [quotes, setQuotes] = useState({\n    quoteToDisplay: '',\n    prevQuote: 'Najpierw wylosuj',\n    randomQuote:''\n  });\n\n  useEffect(() => {\n    const getQuotes = async () => {\n      await fetch(API)\n        .then(response => response.json())\n        .then(data => data.reduce((a,b)=> a.concat(b), []))\n        .then(data=> setAllQuotes(data))\n    }\n    getQuotes();\n  },[]);\n\n  useEffect(() => {\n    if(allQuotes.length !== 0){\n      setRandomQuote();\n    }\n  }, [allQuotes]);\n\n  const setRandomQuote = () => {\n    const numberOfQuotes = allQuotes.length;\n    const drawnQuote = Math.floor(Math.random() * (numberOfQuotes - 1)) + 1;\n    setQuotes({\n      randomQuote: allQuotes[drawnQuote],\n      prevQuote: quotes.randomQuote,\n      quoteToDisplay: allQuotes[drawnQuote]\n    });\n  }\n\n  const displayPrevQuote = ()=> {\n    if(quotes.prevQuote === \"\"){\n      setQuotes(prevState => ({\n        ...prevState,\n        quoteToDisplay: '',\n      }));\n    }else {\n      setQuotes(prevState => ({\n        ...prevState,\n        quoteToDisplay: quotes.prevQuote,\n      }));\n    }\n  };\n\n  return (\n    <div className=\"wrapper\">\n      <header>\n        <h1>Zadanie nr. 3.2</h1>\n        <p>Aplikacja, która pobiera cytaty z API. Po załadowaniu strony wyświetla losowy cytat, dodatkowo zostały dodane dwa przyciski: pierwszy losuje następny cytat, drugi pozwala na powrót do poprzedniego <strong>WYLOSOWANEGO</strong> cytatu.</p>\n        <br/>\n        <strong>UWAGA. Druga wersja aplikacji, która wyświetla poprzedni WYŚWIETLANY cytat dostępna <a href='https://dplotek.github.io/grupa-it-zadanie-3-1/' target=\"_blank\" rel=\"noreferrer\">tutaj.</a></strong>\n      </header>\n      <div className=\"button__container\">\n        <button onClick={setRandomQuote}>Losowy cytat</button>\n        <button onClick={displayPrevQuote}>Poprzedni cytat</button>\n      </div>\n\n      <QuoteBox author={quotes.quoteToDisplay.author}  quote={quotes.quoteToDisplay.quote }/>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}